<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.igeek.zncq.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.igeek.zncq.entity.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="Originator_name" property="originatorName" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="INTEGER"/>
        <result column="num" property="num" jdbcType="BIGINT"/>
        <result column="total" property="total" jdbcType="DOUBLE"/>
        <result column="createDate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="process_name" property="processName" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="order_type" property="orderType" jdbcType="VARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , order_no, Originator_name, customer_id, num, total, createDate, process_name,
    state, order_type, is_delete
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.igeek.zncq.entity.OrderExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from order
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.igeek.zncq.entity.OrderExample">
        delete from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteByOrderNoInt">
        delete
        from `order_good`
        where order_no = #{orderNo}
    </delete>
    <insert id="insert" parameterType="com.igeek.zncq.entity.Order">
        insert into order (id, order_no, Originator_name,
                           customer_id, num, total,
                           createDate, process_name, state,
                           order_type, is_delete)
        values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{originatorName,jdbcType=VARCHAR},
                #{customerId,jdbcType=INTEGER}, #{num,jdbcType=BIGINT}, #{total,jdbcType=DOUBLE},
                #{createdate,jdbcType=TIMESTAMP}, #{processName,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
                #{orderType,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.igeek.zncq.entity.Order">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="originatorName != null">
                Originator_name,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="createdate != null">
                createDate,
            </if>
            <if test="processName != null">
                process_name,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="originatorName != null">
                #{originatorName,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                #{num,jdbcType=BIGINT},
            </if>
            <if test="total != null">
                #{total,jdbcType=DOUBLE},
            </if>
            <if test="createdate != null">
                #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="processName != null">
                #{processName,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <insert id="insertOrder">
        insert into `order`
        (id, order_no, customer_id, Originator_name, createDate, state, order_type, is_delete)
        values (null, #{orderNo}, #{customerId}, #{originatorName}, #{createdate}, #{state}, #{orderType}, #{isDelete})
    </insert>
    <insert id="insertOrderGood">
        insert into `order_good`
        values (null, #{orderNo}, #{goodId}, 1, #{num},0)
    </insert>
    <insert id="insertOrderGood2">
        insert into `order_good`
        values (null, #{orderNo}, #{goodId}, #{vehicleId}, #{num},0)
    </insert>
    <select id="countByExample" parameterType="com.igeek.zncq.entity.OrderExample" resultType="java.lang.Integer">
        select count(*) from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countNumByOrderNoLong" resultType="java.lang.Long">
        select SUM(num)
        from `order_good`
        where order_no = #{orderNo}
    </select>
    <select id="selectTotalByOrderNoDouble" resultType="java.lang.Double">
        select total
        from `order`
        where order_no = #{orderNo}
    </select>
    <select id="countOrderByCustomerIdsAndStates" resultType="java.lang.Integer">
        select count(*)
        from `order`
        <where>
            customer_id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
            <if test="states != null">
                and state in
                <foreach collection="states" item="state" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
        </where>
    </select>
    <resultMap id="OrderAndCustomer" type="com.igeek.zncq.vo.OrderVo">
        <result property="orderNo" column="order_no"></result>
        <result property="originatorName" column="Originator_name"></result>
        <result property="num" column="num"></result>
        <result property="total" column="total"></result>
        <result property="createdate" column="createDate"></result>
        <result property="processName" column="process_name"></result>
        <result property="state" column="state"></result>
        <result property="orderType" column="order_type"></result>
        <association property="customer" javaType="com.igeek.zncq.entity.Customer">
            <id property="id" column="cid"></id>
            <result property="customerName" column="customer_name"></result>
            <result property="address" column="address"></result>
            <result property="linkman" column="linkman"></result>
            <result property="phone" column="phone"></result>
        </association>
    </resultMap>
    <select id="selectOneByOrderNo" resultMap="OrderAndCustomer">
        select o.order_no,  o.Originator_name, o.num, o.total, o.createDate, o.process_name, o.state, o.order_type,
               c.id cid, c.customer_name, c.address, c.linkman, c.phone
        from `order` o join customer c on c.id = o.customer_id
        where o.order_no = #{orderNo}
    </select>
    <select id="selectOrderGood" resultType="com.igeek.zncq.vo.OrderGoodVo">
        select vehicle_id , num from order_good where order_no = #{orderNo} and good_id = #{goodId}
    </select>
    <resultMap id="OrderVoAll" type="com.igeek.zncq.vo.OrderVo">
        <result property="orderNo" column="order_no"></result>
        <result property="num" column="num"></result>
        <result property="orderType" column="order_type"></result>
        <association property="vehicle" javaType="com.igeek.zncq.entity.Vehicle">
            <id property="id" column="id"></id>
            <result property="name" column="name"></result>
            <result property="admin" column="admin"></result>
            <result property="phone" column="phone"></result>
            <result property="vehicleNo" column="vehicle_no"></result>
        </association>
    </resultMap>
    <select id="selectOrderVoAll" resultMap="OrderVoAll">
        select distinct (o.order_no),o.num,o.order_type,v.id, v.name, v.admin, v.phone, v.vehicle_no
        from `order` o
                 join order_good og on o.order_no = og.order_no
                 join vehicle v on v.id = og.vehicle_id
        <where>
            and o.state = 3 and o.order_type != '采购订单'
            <if test="orderNo != null and orderNo != ''">
                and o.order_no like concat('%',#{orderNo},'%')
            </if>
            <if test="vehicleNo != null and vehicleNo != ''">
                and v.vehicle_no like concat('%',#{vehicleNo},'%')
            </if>
        </where>
    </select>
    <select id="selectOneVehicleByOrderNo" resultMap="OrderVoAll">
        select distinct (o.order_no),o.num,o.order_type,v.id, v.name, v.admin, v.phone, v.vehicle_no
        from `order` o
                 join order_good og on o.order_no = og.order_no
                 join vehicle v on v.id = og.vehicle_id
                where o.order_no = #{orderNo}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.originatorName != null">
                Originator_name = #{record.originatorName,jdbcType=VARCHAR},
            </if>
            <if test="record.customerId != null">
                customer_id = #{record.customerId,jdbcType=INTEGER},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=BIGINT},
            </if>
            <if test="record.total != null">
                total = #{record.total,jdbcType=DOUBLE},
            </if>
            <if test="record.createdate != null">
                createDate = #{record.createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.processName != null">
                process_name = #{record.processName,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.orderType != null">
                order_type = #{record.orderType,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order
        set id = #{record.id,jdbcType=INTEGER},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        Originator_name = #{record.originatorName,jdbcType=VARCHAR},
        customer_id = #{record.customerId,jdbcType=INTEGER},
        num = #{record.num,jdbcType=BIGINT},
        total = #{record.total,jdbcType=DOUBLE},
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
        process_name = #{record.processName,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=INTEGER},
        order_type = #{record.orderType,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.igeek.zncq.entity.Order">
        update order
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="originatorName != null">
                Originator_name = #{originatorName,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=BIGINT},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DOUBLE},
            </if>
            <if test="createdate != null">
                createDate = #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="processName != null">
                process_name = #{processName,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.igeek.zncq.entity.Order">
        update order
        set order_no        = #{orderNo,jdbcType=VARCHAR},
            Originator_name = #{originatorName,jdbcType=VARCHAR},
            customer_id     = #{customerId,jdbcType=INTEGER},
            num             = #{num,jdbcType=BIGINT},
            total           = #{total,jdbcType=DOUBLE},
            createDate      = #{createdate,jdbcType=TIMESTAMP},
            process_name    = #{processName,jdbcType=VARCHAR},
            state           = #{state,jdbcType=INTEGER},
            order_type      = #{orderType,jdbcType=VARCHAR},
            is_delete       = #{isDelete,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateStateByOrderNoInt">
        update `order`
        SET state = #{state}
        WHERE (order_no = #{orderNo})
    </update>
    <update id="updateNumByOrderNoInt">
        update `order`
        SET num   = #{num},
            total = #{total}
        WHERE (order_no = #{orderNo})
    </update>
    <update id="updateIsDeleteByOrderNo">
        update `order`
        SET is_delete = 1
        WHERE (order_no = #{orderNo})
    </update>
    <update id="updateVehicleByOrderNo">
        update `order_good` set vehicle_id = #{vehicleId} where order_no = #{orderNo}
    </update>
    <update id="updateStateAndProcessNameByOrderNoInt">
        update `order`
        SET state = #{state},process_name = #{processName}
        WHERE (order_no = #{orderNo})
    </update>
    <update id="updateStateOrederGood">
        update `order_good` set state = #{state} where order_no = #{orderNo} and good_id = #{goodId}
    </update>
</mapper>